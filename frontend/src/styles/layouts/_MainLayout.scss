// src/styles/layouts/_MainLayout.scss

@use '../variables' as *;

.main-layout {
  display: flex;
  flex-direction: column;
  height: 100vh;

  &.sidebar-open {
    .main-content {
      margin-left: $sidebar-width;
      width: calc(100% - #{$sidebar-width});
      transition: margin-left $transition-medium, width $transition-medium;
    }
  }

  &.sidebar-closed {
    .main-content {
      margin-left: $sidebar-collapsed-width;
      width: calc(100% - #{$sidebar-collapsed-width});
      transition: margin-left $transition-medium, width $transition-medium;
    }

    .sidebar {
      width: $sidebar-collapsed-width;

      .sidebar-nav ul li a {
        justify-content: center; // Center icon when collapsed
        span {
          display: none;
        }

        .icon {
          margin-right: 0;
        }
      }
    }
  }
}

// Header styles
.header {
  background-color: var(--header-bg); // Use CSS variable
  color: var(--header-text); // Use CSS variable
  box-shadow: $shadow;
  height: $header-height;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 $spacing-4;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: $z-index-fixed;
  border-bottom: 1px solid var(--border-color); // Use CSS variable
  transition: background-color $transition-medium, color $transition-medium, border-color $transition-medium;

  .header-left {
    display: flex;
    align-items: center;

    .sidebar-toggle {
      background: none;
      border: none;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: $spacing-2;
      margin-right: $spacing-4;

      span {
        background-color: var(--text-secondary); // Use CSS variable
        display: block;
        height: 2px;
        width: 22px;
        margin: 2px 0;
        transition: all $transition-fast;
      }

      &:hover span {
        background-color: var(--primary-color); // Use CSS variable
      }
    }

    .logo {
      color: var(--primary-color); // Use CSS variable
      font-size: $font-size-xl;
      font-weight: $font-weight-bold;
      margin: 0;
    }
  }

  .header-right {
    display: flex;
    align-items: center;

    .user-info {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      margin-right: $spacing-3;

      .user-name {
        font-weight: $font-weight-medium;
        color: var(--text-primary); // Use CSS variable
      }

      .user-role {
        color: var(--text-muted); // Use CSS variable
        font-size: $font-size-xs;
      }
    }

    // Theme Toggle Button in Header
    .theme-toggle-header {
       background: none;
       border: none;
       color: var(--text-secondary); // Use CSS variable
       cursor: pointer;
       font-size: $font-size-xl; // Adjust icon size
       padding: $spacing-2;
       margin-right: $spacing-2; // Add some space before dropdown menu if needed
       transition: color $transition-fast;

       &:hover {
         color: var(--text-primary); // Use CSS variable
       }
        &:focus {
           outline: none;
           // Optional: Add focus ring using theme colors
           box-shadow: 0 0 0 2px rgba(var(--primary-color), 0.4);
        }
    }

    .dropdown {
      position: relative;

      // Keep .dropdown-toggle styles if needed for spacing/layout,
      // but the actual button is now .theme-toggle-header
      // .dropdown-toggle { ... }

      .dropdown-menu {
        position: absolute;
        top: calc(100% + #{$spacing-1}); // Position below button
        right: 0;
        background-color: var(--surface-bg); // Use CSS variable
        border-radius: $border-radius;
        box-shadow: $shadow-lg;
        min-width: 180px;
        padding: $spacing-2 0;
        display: none; // Controlled by hover/click JS if needed, simple hover here
        flex-direction: column;
        z-index: $z-index-dropdown;
        border: 1px solid var(--border-color); // Use CSS variable

        a, button {
          display: block;
          padding: $spacing-2 $spacing-4;
          text-decoration: none;
          color: var(--text-secondary); // Use CSS variable
          text-align: left;
          background: none;
          border: none;
          cursor: pointer;
          width: 100%;
          font-size: $font-size-sm;
          transition: background-color $transition-fast, color $transition-fast;

          &:hover {
            background-color: var(--surface-alt-bg); // Use CSS variable
            color: var(--primary-color); // Use CSS variable
          }
        }
      }

      // Simple hover effect for dropdown menu
      &:hover .dropdown-menu {
        display: flex;
      }
    }
  }
}

// Sidebar styles
.sidebar {
  background-color: var(--sidebar-bg); // Use CSS variable
  width: $sidebar-width;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: $z-index-fixed - 1;
  padding-top: $header-height;
  transition: width $transition-medium, background-color $transition-medium;
  overflow-y: auto;
  border-right: 1px solid var(--border-color); // Use CSS variable for consistency

  .sidebar-nav {
    padding: $spacing-4 0;

    ul {
      list-style: none;
      padding: 0;
      margin: 0;

      li {
        margin-bottom: $spacing-1;

        a {
          display: flex;
          align-items: center;
          padding: $spacing-3 $spacing-4;
          color: var(--sidebar-text); // Use CSS variable
          text-decoration: none;
          transition: background-color $transition-fast, color $transition-fast, border-color $transition-fast;
          border-left: 3px solid transparent;

          .icon {
            margin-right: $spacing-3;
            font-size: $font-size-lg;
            transition: margin $transition-medium; // Smooth icon transition
          }
          span {
             transition: opacity $transition-fast; // Smooth text fade
             opacity: 1;
          }

          &:hover, &.active { // Assuming 'active' class is added by router
            background-color: var(--sidebar-active-bg); // Use CSS variable
            color: var(--sidebar-text-hover); // Use CSS variable
            border-left-color: var(--sidebar-active-border); // Use CSS variable
          }
        }
      }
    }
  }
}

// Main content area
.main-content {
  margin-top: $header-height;
  min-height: calc(100vh - #{$header-height});
  padding: $spacing-6; // Corrected Variable Usage
  background-color: var(--body-bg); // Use CSS variable
  transition: margin-left $transition-medium, width $transition-medium, background-color $transition-medium;
}

// Media queries for responsive design
@media (max-width: $breakpoint-md) {
  .main-layout {
    // Mobile sidebar behavior (example: overlay or push content)
    &.sidebar-open {
      .sidebar {
        transform: translateX(0);
        box-shadow: $shadow-lg; // Add shadow when overlaying
      }
      // If sidebar overlays, main content margin/width might not change
      // .main-content { ... }
    }

    &.sidebar-closed {
      .sidebar {
        transform: translateX(-100%);
      }
      .main-content {
        margin-left: 0;
        width: 100%;
      }
    }
  }

  .sidebar {
    transform: translateX(-100%);
    transition: transform $transition-medium;
    // Ensure sidebar is above content if it overlays
    z-index: $z-index-fixed + 5;
  }

  .main-content {
    margin-left: 0 !important; // Override inline styles if needed
    width: 100% !important;
    padding: $spacing-4; // Reduce padding on mobile
  }

   .header {
     padding: 0 $spacing-3; // Reduce header padding
     .header-left .logo {
        font-size: $font-size-lg; // Smaller logo
     }
     .header-right .user-info {
        display: none; // Hide user info text on small screens
     }
   }
}
