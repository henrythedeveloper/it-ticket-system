// src/styles/components/common/_Dropdown.scss

@use '../../variables' as *;

.dropdown {
  position: relative;
  display: inline-block;

  .dropdown-toggle {
    cursor: pointer;
    // Optional: Add styles to indicate it's clickable if not obvious
    // user-select: none; // Prevent text selection on click
  }

  .dropdown-menu {
    position: absolute;
    top: calc(100% + #{$spacing-1});
    background-color: var(--surface-bg);
    border: 1px solid var(--border-color);
    border-radius: $border-radius;
    box-shadow: $shadow-lg;
    min-width: 180px;
    padding: $spacing-2 0;
    z-index: $z-index-dropdown;
    // --- CHANGE: Hide by default, show with class ---
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px); // Optional: Add slight animation
    transition: opacity $transition-fast, visibility $transition-fast, transform $transition-fast;
    // --- END CHANGE ---
    flex-direction: column; // Keep flex for item alignment

    &.dropdown-menu-right { right: 0; left: auto; }
    &.dropdown-menu-left { left: 0; right: auto; }

    a, button {
      // Styles remain the same
      display: flex;
      align-items: center;
      padding: $spacing-2 $spacing-4;
      text-decoration: none;
      color: var(--text-secondary);
      text-align: left;
      background: none; border: none;
      cursor: pointer; width: 100%;
      font-size: $font-size-sm;
      transition: background-color $transition-fast, color $transition-fast;
      &:hover { background-color: var(--surface-alt-bg); color: var(--primary); }
      svg { margin-right: $spacing-2; width: 16px; height: 16px; opacity: 0.8; }
    }
  }

  // --- ADD IS-OPEN RULE ---
  &.is-open .dropdown-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0); // Animate back to original position
    display: flex; // Use display flex when open
  }
  // --- END ADD IS-OPEN RULE ---

  // Focus-within styling remains useful for keyboard navigation
  &:focus-within .dropdown-menu {
      // Keep this rule if you want keyboard nav to open it,
      // but the click handler is now the primary mechanism.
      // You might only need focus styling on the items inside.
      display: flex;
  }
  &:focus-within .dropdown-toggle {
    // Add focus style to trigger when menu is open via keyboard
    outline: none;
    box-shadow: 0 0 0 2px rgba(var(--accent-rgb), 0.4);
  }
}