// src/styles/components/common/_Sidebar.scss
// ==========================================================================
// Styles for the Sidebar component.
// ==========================================================================

@use '../../variables' as *; // Use variables

// --- Sidebar Styles ---
.sidebar {
  background-color: var(--sidebar-bg, var(--surface-tonal)); // Use specific var or fallback
  width: $sidebar-width;
  height: 100vh; // Full viewport height
  position: fixed; // Fixed position
  top: 0;
  left: 0;
  z-index: $z-index-fixed - 1; // Below header but above content scroll
  padding-top: $header-height; // Account for fixed header
  transition: width $transition-medium, transform $transition-medium, background-color $transition-medium, border-color $transition-medium; // Added transform
  overflow-y: auto; // Allow scrolling if content exceeds height
  border-right: 1px solid var(--border-color); // Use CSS var for border

  // Navigation list within sidebar
  .sidebar-nav {
    padding: $spacing-4 0;
    ul {
      list-style: none;
      padding: 0;
      margin: 0;
      li {
        margin-bottom: $spacing-1;
        // Navigation links
        a {
          display: flex;
          align-items: center;
          padding: $spacing-3 $spacing-4;
          color: var(--sidebar-text, var(--text-muted)); // Use specific var or fallback
          text-decoration: none;
          font-weight: $font-weight-medium; // Added for better readability
          transition: background-color $transition-fast, color $transition-fast, border-color $transition-fast;
          border-left: 3px solid transparent; // For active state indicator

          .icon {
            margin-right: $spacing-3;
            font-size: $font-size-lg; // Slightly smaller icon
            width: 20px; // Ensure consistent icon alignment
            text-align: center; // Center icon if needed
            flex-shrink: 0; // Prevent icon shrinking
            transition: margin $transition-medium;
          }
          span { // Text label
            transition: opacity $transition-fast;
            opacity: 1;
            white-space: nowrap; // Prevent text wrapping
          }

          // Active/hover state
          &:hover,
          &.active { // &.active is added by NavLink
            background-color: rgba(var(--primary-rgb), 0.1); // Use primary alpha background
            color: var(--primary);
            border-left-color: var(--primary);
          }
           &:focus-visible { // Add focus state for keyboard navigation
               outline: none;
               box-shadow: inset 0 0 0 2px rgba(var(--accent-rgb), 0.5); // Use inset accent shadow
           }
        }
      }
    }
  }

  // Styles specific to collapsed state (applied by .sidebar-closed on layout)
  .main-layout.sidebar-closed & { // Target sidebar when layout has .sidebar-closed
      width: $sidebar-collapsed-width; // Collapse sidebar width

      .sidebar-nav ul li a {
        justify-content: center; // Center icon
        padding: $spacing-3 $spacing-2; // Adjust padding for smaller width
        span { display: none; } // Hide text label
        .icon { margin-right: 0; } // Remove icon margin
      }
  }

   // Mobile specific styles (applied by .mobile-open on sidebar itself)
   @media (max-width: $breakpoint-md) {
      transform: translateX(-100%); // Hidden by default
      transition: transform $transition-medium;
      z-index: $z-index-fixed + 5; // Ensure sidebar is above content if it overlays
      width: 280px; // Fixed width for mobile overlay

      &.mobile-open {
          transform: translateX(0);
          box-shadow: $shadow-lg;
      }

       // Ensure text is visible in mobile overlay mode regardless of main layout class
       .sidebar-nav ul li a {
           justify-content: flex-start; // Align items normally
           span { display: inline; } // Show text label
           .icon { margin-right: $spacing-3; } // Restore icon margin
       }
   }

} // End .sidebar

