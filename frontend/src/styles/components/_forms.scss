// src/styles/components/_forms.scss
// ==========================================================================
// Styles for forms and form elements, utilizing variables and mixins.
// **REVISED: Use accent/secondary colors more deliberately.**
// **REVISED AGAIN: Added styles for attachment input/preview.**
// ==========================================================================

@use '../variables' as *; // Needed for non-color vars like spacing, breakpoints
@use '../mixins'; // Use the new mixins file

// Form container
.form-container {
  @include mixins.card-base; // Use card mixin for base styles
  padding: $spacing-6; // Override padding if needed
  max-width: 32rem;
  width: 100%;
  margin: 0 auto;
}

// Form groups
.form-group {
  margin-bottom: $spacing-4;

  label {
    display: block;
    font-weight: $font-weight-medium;
    margin-bottom: $spacing-2;
    color: var(--text-primary);
    transition: color $transition-medium;
  }

  // Apply base input styles using mixin
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="date"],
  input[type="tel"],
  input[type="url"],
  select,
  textarea {
    @include mixins.form-element-base; // Mixin now uses accent for focus shadow
  }

  textarea { // Specific textarea styles
    min-height: 120px;
    resize: vertical;
  }

  select { // Specific select styles
    @include mixins.select-arrow; // Mixin handles theme-aware arrow (uses primary)
  }

  // Error message styling
  .error {
    color: var(--error); // Use CSS var for error text
    font-size: $font-size-sm;
    margin-top: $spacing-1;
  }

  // Checkbox specific styles
  &.checkbox {
    display: flex;
    align-items: center;
    label {
      display: flex;
      align-items: center;
      margin-bottom: 0;
      cursor: pointer;
      input[type="checkbox"] {
        margin-right: $spacing-2;
        cursor: pointer;
        // --- Use ACCENT color for checkbox ---
        accent-color: var(--accent); // More prominent than primary for selection state
      }
    }
  }

  // Inline form group styles
  &.inline {
    display: flex;
    align-items: center;
    label {
      margin-right: $spacing-4;
      margin-bottom: 0;
      flex-shrink: 0;
    }
  }

  // Field description/note styling
  .field-description, .field-info {
      font-size: $font-size-sm;
      color: var(--text-muted);
      margin-top: $spacing-1;
      transition: color $transition-medium;
  }

  // Static field display (read-only look)
  .static-field {
      padding: $spacing-3;
      background-color: var(--surface-tonal-1);
      border: 1px solid var(--surface-tonal-2);
      border-radius: $border-radius;
      color: var(--text-secondary);
      transition: all $transition-medium;

      &:hover {
        background-color: var(--surface-tonal-2);
        border-color: var(--surface-tonal-3);
      }
  }

  // Input with addon/button
  .input-with-button {
    display: flex;
    input { // Input styles inherited via mixin
      flex: 1;
      border-radius: $border-radius 0 0 $border-radius; // Adjust radius
      border-right-width: 0;
      &:focus {
        z-index: 1;
        position: relative;
        background-color: var(--surface-tonal); // Lighter background on focus
      }
    }
    .add-btn { // Example button class - assumes base .btn styles are applied
      border-radius: 0 $border-radius $border-radius 0; // Adjust radius
      padding: 0 $spacing-4; // Adjust padding based on base button padding
      // Apply specific variant if needed, e.g., primary
      // @include mixins.button-variant(--primary, --text-inverted, --primary-dark);
    }
  }

  // --- Attachment Input Styles (Shared for TicketForm & AttachmentUpload) ---
  .attachment-upload-form,
  .form-group .attachment-input-area {
    margin-top: $spacing-1;
    margin-bottom: $spacing-3;
  }

  .attachment-upload-form {
    padding: 0;
    background: none;
    box-shadow: none;
    border: none;
  }

  .attachment-upload-form .attachment-input-area,
  .form-group .attachment-input-area {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: $spacing-2;
    margin-bottom: $spacing-2;
  }

  .file-input-hidden {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
  }

  .file-input-trigger {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1.25rem 0.75rem;
    border: 2px dashed var(--border-color-strong);
    border-radius: var(--border-radius-lg);
    background-color: var(--surface-alt-bg);
    color: var(--text-muted);
    cursor: pointer;
    transition: all 0.2s;
    text-align: center;
    min-height: 80px;

    svg {
      margin-bottom: 0.5rem;
      color: var(--primary);
    }

    &:hover {
      border-color: var(--primary);
      background-color: var(--surface-bg);
      color: var(--text-secondary);
    }
    &.drag-over {
      border-color: var(--primary);
      background-color: rgba(var(--primary-rgb), 0.07);
      color: var(--primary);

      svg {
        color: var(--primary-dark);
      }
    }
  }

  .file-preview-list {
    margin-top: 0.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: 0.5rem;
    background-color: var(--surface-bg);
    max-height: 120px;
    overflow-y: auto;
  }

  .file-preview-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.25rem 0.5rem;
    font-size: $font-size-sm;
    color: var(--text-secondary);
    border-bottom: 1px solid var(--border-color);

    &:last-child {
      border-bottom: none;
    }

    .file-name {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin-right: 0.5rem;
      flex-grow: 1;
    }

    .file-size {
      color: var(--text-muted);
      font-size: $font-size-xs;
      white-space: nowrap;
      margin-right: 0.5rem;
      flex-shrink: 0;
    }

    .remove-file-btn {
      background: none;
      border: none;
      color: var(--error);
      cursor: pointer;
      padding: 0.25rem;
      line-height: 1;
      border-radius: 50%;
      transition: background-color 0.15s;
      flex-shrink: 0;

      &:hover {
        background-color: rgba(var(--error-rgb), 0.13);
      }

      &:disabled {
        color: var(--text-muted);
        cursor: not-allowed;
        background-color: transparent;
      }
    }
  }
  // --- End Attachment Input Styles ---

} // End .form-group

// Form divided in columns
.form-row {
  display: flex;
  flex-wrap: wrap; // Allow wrapping on smaller screens if needed
  gap: $spacing-4;
  margin-bottom: $spacing-4;

  .form-group {
    flex: 1 1 auto; // Allow shrinking and growing
    min-width: 150px; // Prevent excessive shrinking
    margin-bottom: 0;
  }
}

// Form actions (buttons container)
.form-actions {
  display: flex;
  justify-content: flex-end; // Align buttons to the right
  flex-wrap: wrap; // Allow buttons to wrap on small screens
  gap: $spacing-3;
  margin-top: $spacing-6;

  // Use secondary outline for cancel buttons by default
  .cancel-btn {
      @include mixins.button-base; // Apply base styles first
      @include mixins.button-outline-secondary; // Apply secondary outline mixin
  }
}

.recurrence-fieldset {
  border: 1px solid var(--border-color);
  border-radius: $border-radius;
  padding: $spacing-4 $spacing-5 $spacing-5; // Adjust padding
  margin-top: $spacing-4;
  margin-bottom: $spacing-4;

  legend {
    padding: 0 $spacing-2;
    font-weight: $font-weight-medium;
    color: var(--text-secondary);
    font-size: $font-size-sm;
  }

  // Container for frequency/interval selects/inputs
  .recurrence-controls {
    margin-bottom: $spacing-4; // Space before weekly/monthly options
     align-items: flex-end; // Align interval input label better

     .recurrence-frequency { flex-basis: 50%; flex-grow: 1; } // Allow frequency to take space
     .recurrence-interval { flex-basis: 40%; flex-grow: 1; max-width: 150px; } // Limit interval width
  }

  // Container for day buttons
  .day-selector {
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-2;
    margin-top: $spacing-2; // Space below label

    .day-button {
      @include mixins.button-base; // Use base button style
      padding: $spacing-2 $spacing-3;
      min-width: 50px; // Ensure buttons have some width
      font-size: $font-size-sm;
      border: 1px solid var(--border-color);
      background-color: var(--surface-alt-bg);
      color: var(--text-secondary);

      &:hover:not(:disabled) {
        border-color: var(--border-color-strong);
        background-color: var(--surface-bg);
      }

      &.selected {
        background-color: var(--primary);
        border-color: var(--primary);
        color: var(--text-inverted);
        &:hover:not(:disabled) {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
        }
      }
    }
  }

  // Container for monthly options
  .recurrence-monthly-options {
    margin-top: $spacing-4;
    .recurrence-day-month {
        max-width: 200px; // Limit width of day input
    }
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-sm) { // Trigger earlier for button wrapping
  .form-actions {
    flex-direction: column-reverse; // Stack buttons vertically, primary action last (often visually first)
    .btn, .cancel-btn { // Ensure buttons take full width in column layout
      width: 100%;
    }
  }
}

