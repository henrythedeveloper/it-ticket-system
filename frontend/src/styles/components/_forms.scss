// src/styles/components/_forms.scss
// ==========================================================================
// Styles for forms and form elements, utilizing variables and mixins.
// ==========================================================================

@use '../variables' as *; // Still needed for non-color vars like spacing, breakpoints
@use '../mixins'; // Use the new mixins file

// Form container
.form-container {
  @include mixins.card-base; // Use card mixin for base styles
  padding: $spacing-6; // Override padding if needed
  max-width: 32rem;
  width: 100%;
  margin: 0 auto;
}

// Form groups
.form-group {
  margin-bottom: $spacing-4;

  label {
    display: block;
    font-weight: $font-weight-medium;
    margin-bottom: $spacing-2;
    color: var(--text-primary);
    transition: color $transition-medium;
  }

  // Apply base input styles using mixin
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="date"],
  input[type="tel"],
  input[type="url"],
  select,
  textarea {
    @include mixins.form-element-base;
  }

  textarea { // Specific textarea styles
    min-height: 120px;
    resize: vertical;
  }

  select { // Specific select styles
    @include mixins.select-arrow;
  }

  // Error message styling
  .error {
    color: var(--error-color);
    font-size: $font-size-sm;
    margin-top: $spacing-1;
  }

  // Checkbox specific styles
  &.checkbox {
    display: flex;
    align-items: center;
    label {
      display: flex;
      align-items: center;
      margin-bottom: 0;
      cursor: pointer;
      input[type="checkbox"] {
        margin-right: $spacing-2;
        cursor: pointer;
        // Simple accent color for the checkbox itself
        accent-color: var(--primary-color);
      }
    }
  }

  // Inline form group styles
  &.inline {
    display: flex;
    align-items: center;
    label {
      margin-right: $spacing-4;
      margin-bottom: 0;
      flex-shrink: 0;
    }
  }

  // Field description/note styling
  .field-description, .field-info {
      font-size: $font-size-sm;
      color: var(--text-muted);
      margin-top: $spacing-1;
      transition: color $transition-medium;
  }

  // Static field display (read-only look)
  .static-field {
      padding: $spacing-3;
      background-color: var(--surface-alt-bg);
      border: 1px solid var(--border-color-strong);
      border-radius: $border-radius;
      color: var(--text-secondary);
      transition: background-color $transition-medium, border-color $transition-medium, color $transition-medium;
  }

  // Input with addon/button
    .input-with-button {
      display: flex;
      input { // Input styles inherited via mixin
        flex: 1;
        border-radius: $border-radius 0 0 $border-radius; // Adjust radius
      }
      .add-btn { // Example button class
        @extend .btn; // Extend base button styles
        border-radius: 0 $border-radius $border-radius 0; // Adjust radius
        padding: 0 $spacing-4; // Adjust padding
      }
    }
}

// Form divided in columns
.form-row {
  display: flex;
  gap: $spacing-4;
  margin-bottom: $spacing-4;

  .form-group {
    flex: 1;
    margin-bottom: 0;
  }
}

// Form actions (buttons container)
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: $spacing-3;
  margin-top: $spacing-6;

  // Specific button styles within actions if needed
  .cancel-btn { // Example cancel button style
      @extend .btn; // Extend base button
      // Use outline variant or specific colors
      @include mixins.button-outline-variant(--text-secondary, --text-primary);
      border-color: var(--border-color-strong); // Use stronger border for contrast
      color: var(--text-secondary);

      &:hover {
        background-color: var(--surface-alt-bg);
        border-color: var(--border-color-strong);
        color: var(--text-primary);
      }
  }
  .submit-btn { // Example submit button
      @extend .btn; // Already primary by default .btn styles
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-md) {
  .form-row {
    flex-direction: column;
    gap: $spacing-4; // Keep gap for column layout
  }

  .form-actions {
    flex-direction: column;
    .btn { // Ensure buttons take full width in column layout
      width: 100%;
    }
  }
}
