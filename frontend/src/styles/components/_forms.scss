// src/styles/components/_forms.scss
// ==========================================================================
// Styles for forms and form elements, utilizing variables and mixins.
// **REVISED: Use accent/secondary colors more deliberately.**
// **REVISED AGAIN: Added styles for attachment input/preview.**
// ==========================================================================

@use '../variables' as *; // Needed for non-color vars like spacing, breakpoints
@use '../mixins'; // Use the new mixins file

// Form container
.form-container {
  @include mixins.card-base; // Use card mixin for base styles
  padding: $spacing-6; // Override padding if needed
  max-width: 32rem;
  width: 100%;
  margin: 0 auto;
}

// Form groups
.form-group {
  margin-bottom: $spacing-4;

  label {
    display: block;
    font-weight: $font-weight-medium;
    margin-bottom: $spacing-2;
    color: var(--text-primary);
    transition: color $transition-medium;
  }

  // Apply base input styles using mixin
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="date"],
  input[type="tel"],
  input[type="url"],
  select,
  textarea {
    @include mixins.form-element-base; // Mixin now uses accent for focus shadow
  }

  textarea { // Specific textarea styles
    min-height: 120px;
    resize: vertical;
  }

  select { // Specific select styles
    @include mixins.select-arrow; // Mixin handles theme-aware arrow (uses primary)
  }

  // Error message styling
  .error {
    color: var(--error); // Use CSS var for error text
    font-size: $font-size-sm;
    margin-top: $spacing-1;
  }

  // Checkbox specific styles
  &.checkbox {
    display: flex;
    align-items: center;
    label {
      display: flex;
      align-items: center;
      margin-bottom: 0;
      cursor: pointer;
      input[type="checkbox"] {
        margin-right: $spacing-2;
        cursor: pointer;
        // --- Use ACCENT color for checkbox ---
        accent-color: var(--accent); // More prominent than primary for selection state
      }
    }
  }

  // Inline form group styles
  &.inline {
    display: flex;
    align-items: center;
    label {
      margin-right: $spacing-4;
      margin-bottom: 0;
      flex-shrink: 0;
    }
  }

  // Field description/note styling
  .field-description, .field-info {
      font-size: $font-size-sm;
      color: var(--text-muted);
      margin-top: $spacing-1;
      transition: color $transition-medium;
  }

  // Static field display (read-only look)
  .static-field {
      padding: $spacing-3;
      background-color: var(--surface-tonal-1);
      border: 1px solid var(--surface-tonal-2);
      border-radius: $border-radius;
      color: var(--text-secondary);
      transition: all $transition-medium;

      &:hover {
        background-color: var(--surface-tonal-2);
        border-color: var(--surface-tonal-3);
      }
  }

  // Input with addon/button
  .input-with-button {
    display: flex;
    input { // Input styles inherited via mixin
      flex: 1;
      border-radius: $border-radius 0 0 $border-radius; // Adjust radius
      border-right-width: 0;
      &:focus {
        z-index: 1;
        position: relative;
        background-color: var(--surface-tonal); // Lighter background on focus
      }
    }
    .add-btn { // Example button class - assumes base .btn styles are applied
      border-radius: 0 $border-radius $border-radius 0; // Adjust radius
      padding: 0 $spacing-4; // Adjust padding based on base button padding
      // Apply specific variant if needed, e.g., primary
      // @include mixins.button-variant(--primary, --text-inverted, --primary-dark);
    }
  }

  // --- Attachment Input Styles (Added for TicketForm) ---
  .attachment-input-area {
    margin-top: $spacing-1; // Space below the label
  }

  .file-input-hidden {
      width: 0.1px;
      height: 0.1px;
      opacity: 0;
      overflow: hidden;
      position: absolute;
      z-index: -1;
  }

  .file-input-trigger {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 1.5rem 1rem; // Adjust padding as needed
      border: 2px dashed var(--border-color-strong); // Use CSS variables
      border-radius: var(--border-radius-lg); // Use CSS variable for radius
      background-color: var(--surface-alt-bg); // Use CSS variable
      color: var(--text-muted); // Use CSS variable
      cursor: pointer;
      transition: all 0.2s ease-in-out;
      text-align: center;

      svg {
          margin-bottom: 0.5rem; // Space below icon
          color: var(--primary); // Use CSS variable for icon color
      }

      &:hover {
          border-color: var(--primary); // Use CSS variable
          background-color: var(--surface-bg); // Use CSS variable
          color: var(--text-secondary); // Use CSS variable
      }
      &.drag-over {
        border-color: var(--primary); // Highlight border with primary color
        background-color: rgba(var(--primary-rgb), 0.05); // Subtle primary background tint
        color: var(--primary); // Change text color

        svg {
            color: var(--primary-dark); // Make icon slightly darker
        }
    }
  }

  /* Styles for the file preview list */
  .file-preview-list {
      margin-top: 1rem; // Space above the list
      border: 1px solid var(--border-color); // Use CSS variable
      border-radius: var(--border-radius); // Use CSS variable
      padding: 0.5rem; // Padding inside the list container
      background-color: var(--surface-bg); // Use CSS variable
      max-height: 150px; // Limit height and allow scroll if many files
      overflow-y: auto;
  }

  .file-preview-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem;
      font-size: $font-size-sm; /* text-sm */
      color: var(--text-secondary); // Use CSS variable
      border-bottom: 1px solid var(--border-color); // Use CSS variable

      &:last-child {
          border-bottom: none; // Remove border from last item
      }

      .file-name {
          white-space: nowrap; // Prevent wrapping
          overflow: hidden; // Hide overflow
          text-overflow: ellipsis; // Add ellipsis for long names
          margin-right: 0.5rem; // Space between name and size/button
          flex-grow: 1; // Allow name to take available space
      }

      .file-size {
          color: var(--text-muted); // Use CSS variable
          font-size: $font-size-xs; /* text-xs */
          white-space: nowrap; // Prevent wrapping
          margin-right: 0.5rem; // Space before remove button
          flex-shrink: 0; // Prevent size from shrinking
      }

      .remove-file-btn {
          background: none;
          border: none;
          color: var(--error); // Use CSS variable for error color
          cursor: pointer;
          padding: 0.25rem; // Small padding for click area
          line-height: 1; // Ensure icon aligns well
          border-radius: 50%; // Circular background on hover
          transition: background-color 0.15s ease;
          flex-shrink: 0; // Prevent button from shrinking

          &:hover {
              // Use RGB version for alpha background
              background-color: rgba(var(--error-rgb), 0.1);
          }

          &:disabled {
              color: var(--text-muted); // Use CSS variable
              cursor: not-allowed;
              background-color: transparent; // No background when disabled
          }
      }
  }
  // --- End Attachment Input Styles ---

} // End .form-group

// Form divided in columns
.form-row {
  display: flex;
  flex-wrap: wrap; // Allow wrapping on smaller screens if needed
  gap: $spacing-4;
  margin-bottom: $spacing-4;

  .form-group {
    flex: 1 1 auto; // Allow shrinking and growing
    min-width: 150px; // Prevent excessive shrinking
    margin-bottom: 0;
  }
}

// Form actions (buttons container)
.form-actions {
  display: flex;
  justify-content: flex-end; // Align buttons to the right
  flex-wrap: wrap; // Allow buttons to wrap on small screens
  gap: $spacing-3;
  margin-top: $spacing-6;

  // Use secondary outline for cancel buttons by default
  .cancel-btn {
      @include mixins.button-base; // Apply base styles first
      @include mixins.button-outline-secondary; // Apply secondary outline mixin
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-sm) { // Trigger earlier for button wrapping
  .form-actions {
    flex-direction: column-reverse; // Stack buttons vertically, primary action last (often visually first)
    .btn, .cancel-btn { // Ensure buttons take full width in column layout
      width: 100%;
    }
  }
}

