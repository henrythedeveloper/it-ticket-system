// src/styles/global.scss
// ==========================================================================
// Main SCSS entry point. Imports variables, mixins, components, layouts,
// and page-specific styles. Defines global styles and theme overrides.
// ==========================================================================

// --------------------------------------------------------------------------
// Imports
// --------------------------------------------------------------------------
@use 'variables' as *; // Core design tokens and CSS variable definitions
@use 'mixins';         // Reusable SCSS mixins

// Import component styles
@use './components/forms';
@use './components/tickets/TicketCard';

// Import layout styles
@use './layouts/AuthLayout';
@use './layouts/MainLayout';
@use './layouts/PublicLayout';

// Import page-specific styles
@use './pages/dashboard/DashboardPage';
@use './pages/dashboard/ProfilePage';
@use './pages/dashboard/SettingsPage';
@use './pages/dashboard/TaskDetailPage';
@use './pages/dashboard/TasksPage';
@use './pages/dashboard/TicketDetailPage';
@use './pages/dashboard/TicketsPage';
@use './pages/dashboard/UserFormPage';
@use './pages/dashboard/UsersPage';
@use './pages/public/CreateTicketPage';
@use './pages/public/FAQPage';
@use './pages/public/HomePage';

// --------------------------------------------------------------------------
// Base Reset & Global Styles
// --------------------------------------------------------------------------
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// Helper for icon elements if needed
.icon {
    font-style: normal !important; // Prevent italics
}

html {
  font-size: 16px; // Base font size
  height: 100%;
  color-scheme: light dark; // Indicate theme support to browser
}

body {
  font-family: $font-family-sans;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100%;
  background-color: var(--body-bg); // Apply light mode default background
  color: var(--text-secondary);    // Apply light mode default text color
  transition: background-color $transition-medium, color $transition-medium; // Smooth theme transition
}

#root { // Assuming #root is your React mount point
  height: 100%;
}

// --- Headings, Text, Links (using CSS variables) ---
h1, h2, h3, h4, h5, h6 {
  margin-bottom: $spacing-4;
  color: var(--text-primary);
  font-weight: $font-weight-bold;
  line-height: 1.2;
}
h1 { font-size: $font-size-3xl; }
h2 { font-size: $font-size-2xl; }
h3 { font-size: $font-size-xl; }
h4 { font-size: $font-size-lg; }

p {
  margin-bottom: $spacing-4;
  color: var(--text-secondary);
}

a {
  color: var(--text-link);
  text-decoration: underline;
  transition: color $transition-fast;
  &:hover { color: var(--text-link-hover); }
}

ul, ol {
  margin-bottom: $spacing-4;
  padding-left: $spacing-5;
}

// --- Common UI Elements ---

/* Base Card Style */
.card {
    @include mixins.card-base; // Apply base card styles using mixin
}

/* Base Button Style */
.btn {
    @include mixins.button-base; // Apply base button styles
    // Default to primary variant
    @include mixins.button-variant(--primary-color, --text-inverted, --primary-dark);

    // Define variants by extending or using mixins in component styles
    &.btn-secondary { @include mixins.button-variant(--secondary-color, --text-inverted, --secondary-dark); }
    &.btn-danger { @include mixins.button-variant(--error-color, $white, darken($red-500, 10%)); } // Danger text often stays white
    &.btn-outline { @include mixins.button-outline-variant(--primary-color, --text-inverted); }
    &.btn-sm { padding: $spacing-2 $spacing-4; font-size: $font-size-sm; }
    &.btn-lg { padding: $spacing-4 $spacing-8; font-size: $font-size-lg; }
    &.loading { @include mixins.button-loading; } // Apply loading mixin
}

/* Data Tables */
.table-container { overflow-x: auto; margin-bottom: $spacing-6; }
table {
  width: 100%; border-collapse: collapse;
  th, td { padding: $spacing-3; text-align: left; border-bottom: 1px solid var(--border-color); transition: background-color $transition-medium, border-color $transition-medium, color $transition-medium; }
  th { background-color: var(--surface-alt-bg); font-weight: $font-weight-semibold; color: var(--text-primary); }
  td { color: var(--text-secondary); }
  tr:hover td { background-color: var(--surface-alt-bg); }
}

/* Alerts */
.alert {
  padding: $spacing-4; border-radius: $border-radius; margin-bottom: $spacing-4;
  border-width: 1px; border-style: solid;
  &.alert-info { background-color: rgba(var(--info-color), 0.1); color: var(--info-color); border-color: rgba(var(--info-color), 0.2); }
  &.alert-success { background-color: rgba(var(--success-color), 0.1); color: var(--success-color); border-color: rgba(var(--success-color), 0.2); }
  &.alert-warning { background-color: rgba(var(--warning-color), 0.1); color: var(--warning-color); border-color: rgba(var(--warning-color), 0.2); }
  &.alert-error { background-color: rgba(var(--error-color), 0.1); color: var(--error-color); border-color: rgba(var(--error-color), 0.2); }
}

/* Loaders */
.loader { /* Spinner styles */
  display: inline-block; width: 40px; height: 40px;
  border: 3px solid rgba(var(--primary-color), 0.3); border-radius: 50%;
  border-top-color: var(--primary-color); animation: spin 1s ease-in-out infinite;
}
@keyframes spin { to { transform: rotate(360deg); } }
.loading { /* Loading container */
  display: flex; flex-direction: column; align-items: center; justify-content: center;
  padding: $spacing-8; color: var(--text-muted);
  p { margin-top: $spacing-4; }
}

/* Error and Success Messages */
.error-message { background-color: var(--badge-error-bg-alpha); color: var(--error-color); padding: $spacing-3; border-radius: $border-radius; margin-bottom: $spacing-4; border: 1px solid rgba(var(--error-color), 0.3); }
.success-message { background-color: var(--badge-success-bg-alpha); color: var(--success-color); padding: $spacing-3; border-radius: $border-radius; margin-bottom: $spacing-4; border: 1px solid rgba(var(--success-color), 0.3); }

// --------------------------------------------------------------------------
// Dark Mode Overrides
// --------------------------------------------------------------------------
body.dark-mode {
  // Override CSS variables using base palette SCSS variables
  --primary-color: #{$sky-500};
  --primary-light: #{$sky-600};
  --primary-dark: #{$sky-400};
  --secondary-color: #{$teal-500};
  --secondary-light: #{$teal-600};
  --secondary-dark: #{$teal-400};
  --accent-color: #{$violet-400};
  --accent-light: #{$violet-500};
  --accent-dark: #{$violet-300};

  --body-bg: #{$gray-900};
  --surface-bg: #{$gray-800};
  --surface-alt-bg: #{$gray-700};

  --text-primary: #{$gray-100};
  --text-secondary: #{$gray-300};
  --text-muted: #{$gray-400};
  --text-inverted: #{$gray-900};
  --text-link: #{$sky-500};
  --text-link-hover: #{$sky-400};

  --border-color: #{$gray-700};
  --border-color-strong: #{$gray-600};

  --success-color: #{$teal-400};
  --error-color: #{$red-400};
  --warning-color: #{$amber-400};
  --info-color: #{$sky-400};

  --status-unassigned-color: #{$amber-400};
  --status-assigned-color: #{$sky-400};
  --status-progress-color: #{$violet-400};
  --status-closed-color: #{$teal-400};

  --urgency-low-color: #{$teal-400};
  --urgency-medium-color: #{$sky-400};
  --urgency-high-color: #{$amber-400};
  --urgency-critical-color: #{$red-400};

  // Component Specific Overrides
  --header-bg: var(--surface-bg);
  --header-text: var(--text-primary);
  --sidebar-bg: $gray-900;
  --sidebar-text: $gray-300;
  --sidebar-text-hover: $white;
  --sidebar-active-bg: rgba($sky-500, 0.15);
  --sidebar-active-border: $sky-500;
  --footer-bg: $gray-900;
  --footer-text: $gray-400;
  --footer-link: $gray-300;
  --footer-link-hover: $white;

  // Badge Background Alphas (Use updated dark mode colors)
  --badge-info-bg-alpha: rgba(var(--info-color), 0.15);
  --badge-success-bg-alpha: rgba(var(--success-color), 0.15);
  --badge-warning-bg-alpha: rgba(var(--warning-color), 0.15);
  --badge-error-bg-alpha: rgba(var(--error-color), 0.15);

  // --- Global Dark Mode Element Adjustments ---
  // Selectors inside body.dark-mode ensure these only apply when dark mode is active
  a { color: var(--text-link); &:hover { color: var(--text-link-hover); } }
  h1, h2, h3, h4, h5, h6 { color: var(--text-primary); }
  table th { background-color: var(--surface-alt-bg); color: var(--text-primary); border-bottom-color: var(--border-color); }
  table td { border-bottom-color: var(--border-color); color: var(--text-secondary); }
  table tr:hover td { background-color: var(--surface-alt-bg); }
  .card { background-color: var(--surface-bg); box-shadow: none; border: 1px solid var(--border-color); }

  // Alerts
  .alert {
      &.alert-info { background-color: rgba(var(--info-color), 0.15); color: var(--info-color); border-color: rgba(var(--info-color), 0.3); }
      &.alert-success { background-color: rgba(var(--success-color), 0.15); color: var(--success-color); border-color: rgba(var(--success-color), 0.3); }
      &.alert-warning { background-color: rgba(var(--warning-color), 0.15); color: var(--warning-color); border-color: rgba(var(--warning-color), 0.3); }
      &.alert-error { background-color: rgba(var(--error-color), 0.15); color: var(--error-color); border-color: rgba(var(--error-color), 0.3); }
  }
  // Disabled form elements
  input:disabled, select:disabled, textarea:disabled, button:disabled {
      background-color: $gray-700 !important;
      color: $gray-500 !important;
      border-color: $gray-600 !important;
      cursor: not-allowed !important;
      opacity: 0.7 !important;
    }
}

// --------------------------------------------------------------------------
// Responsive Utilities
// --------------------------------------------------------------------------
@media (max-width: $breakpoint-md) { .hide-md { display: none; } }
@media (max-width: $breakpoint-sm) {
  .hide-sm { display: none; }
  h1 { font-size: $font-size-2xl; }
  h2 { font-size: $font-size-xl; }
}
