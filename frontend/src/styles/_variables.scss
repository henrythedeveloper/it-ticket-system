// src/styles/_variables.scss
// ==========================================================================
// Defines the core design tokens for the application, including:
// 1. Theme map for light and dark modes.
// 2. CSS custom properties (:root) derived from the theme map.
// 3. Non-color SCSS variables (typography, spacing, layout, etc.).
// **REVISED: Updated theme colors again based on user request.**
// ==========================================================================
@use 'sass:map'; // Use sass:map for map functions
@use 'sass:color'; // Use sass:color for color functions

// --------------------------------------------------------------------------
// Theme Map (Updated with user's provided colors)
// --------------------------------------------------------------------------
$themes: (
  light: (
    // Base Colors from User
    text:           #0f1014, // Dark blue/black
    background:     #f0f1f4, // Light gray/blue
    primary:        #3c4353, // Dark grayish blue
    secondary:      #b6aa9a, // Muted beige/brown
    accent:         #667958, // Muted olive green

    // Semantic Names (Mapping user's terms + defining others)
    text-primary:    #0f1014, // from text
    text-secondary:  color.adjust(#0f1014, $lightness: 30%), // Lighter primary text
    text-muted:      color.adjust(#0f1014, $lightness: 50%), // Even lighter
    text-inverted:   #f0f1f4, // from background
    text-link:       #3c4353, // from primary
    text-link-hover: color.adjust(#3c4353, $blackness: 10%), // Darken primary

    body-bg:         #f0f1f4, // from background
    surface-bg:      #ffffff, // Keep white for cards/modals
    surface-alt-bg:  color.adjust(#f0f1f4, $blackness: 2%), // Slightly darker background

    border-color:       color.adjust(#f0f1f4, $blackness: 10%), // Border derived from background
    border-color-strong: color.adjust(#f0f1f4, $blackness: 20%), // Stronger border

    primary-light:     color.adjust(#3c4353, $lightness: 15%),
    primary-dark:      color.adjust(#3c4353, $blackness: 10%),
    secondary-light:   color.adjust(#b6aa9a, $lightness: 10%),
    secondary-dark:    color.adjust(#b6aa9a, $blackness: 10%),
    accent-light:      color.adjust(#667958, $lightness: 10%),
    accent-dark:       color.adjust(#667958, $blackness: 10%),

    // Define standard state colors (using common defaults, adjust if needed)
    success:         #10b981,
    error:           #ef4444,
    warning:         #f59e0b,
    info:            #3b82f6,

    // Component Specific (Adjust based on new palette)
    header-bg:       var(--surface-bg),
    sidebar-bg:      #2d323d, // Darker version of primary for sidebar
    footer-bg:       var(--surface-alt-bg), // Use alt surface for footer now
    // Footer text/links for light footer background
    footer-text:     var(--text-secondary),
    footer-link:     var(--text-link),
    footer-link-hover: var(--text-link-hover),
  ),
  dark: (
    // Base Colors from User
    text:           #ebecf0, // Light gray/blue text
    background:     #0b0c0f, // Very dark blue/black
    primary:        #acb3c3, // Light grayish blue
    secondary:      #655949, // Muted dark brown
    accent:         #94a786, // Muted light olive green

    // Semantic Names (Mapping user's terms + defining others)
    text-primary:    #ebecf0, // from text
    text-secondary:  color.adjust(#ebecf0, $blackness: 25%), // Darker version of primary text
    text-muted:      color.adjust(#ebecf0, $blackness: 40%), // Even darker version
    text-inverted:   #0b0c0f, // from background
    text-link:       #acb3c3, // from primary
    text-link-hover: color.adjust(#acb3c3, $lightness: 10%), // Lighten primary for hover

    body-bg:         #0b0c0f, // from background
    surface-bg:      #1a1d24, // Slightly lighter dark blue/black
    surface-alt-bg:  #292e38, // Lighter still

    border-color:       #3a404d, // Border derived from surfaces
    border-color-strong: #4b5563, // Stronger border

    primary-light:     color.adjust(#acb3c3, $lightness: 10%),
    primary-dark:      color.adjust(#acb3c3, $blackness: 10%),
    secondary-light:   color.adjust(#655949, $lightness: 10%),
    secondary-dark:    color.adjust(#655949, $blackness: 10%),
    accent-light:      color.adjust(#94a786, $lightness: 10%),
    accent-dark:       color.adjust(#94a786, $blackness: 10%),

    // Define standard state colors (adjust brightness/saturation for dark mode)
    success:         #34d399,
    error:           #f87171,
    warning:         #fbbf24,
    info:            #60a5fa,

    // Component Specific (Adjust based on new palette)
    header-bg:       var(--surface-bg),
    sidebar-bg:      #1f232b,       // Darker sidebar
    footer-bg:       var(--surface-alt-bg), // Use alt surface for footer
    // Footer text/links for dark footer background
    footer-text:     var(--text-secondary),
    footer-link:     var(--text-link),
    footer-link-hover: var(--text-link-hover),
  )
);

// --------------------------------------------------------------------------
// Generate CSS Custom Properties from Theme Map
// --------------------------------------------------------------------------
// Creates the :root variables based on the light theme map.
:root {
    // Generate CSS variables from the 'light' theme map
    @each $key, $value in map.get($themes, light) {
      --#{$key}: #{$value};
    }

    // --- Add derived/alpha colors manually or via loop if needed ---
    // Define RGB versions for use in rgba()
    --primary-rgb: #{color.red(map.get(map.get($themes, light), primary))}, #{color.green(map.get(map.get($themes, light), primary))}, #{color.blue(map.get(map.get($themes, light), primary))};
    --success-rgb: #{color.red(map.get(map.get($themes, light), success))}, #{color.green(map.get(map.get($themes, light), success))}, #{color.blue(map.get(map.get($themes, light), success))};
    --error-rgb: #{color.red(map.get(map.get($themes, light), error))}, #{color.green(map.get(map.get($themes, light), error))}, #{color.blue(map.get(map.get($themes, light), error))};
    --warning-rgb: #{color.red(map.get(map.get($themes, light), warning))}, #{color.green(map.get(map.get($themes, light), warning))}, #{color.blue(map.get(map.get($themes, light), warning))};
    --info-rgb: #{color.red(map.get(map.get($themes, light), info))}, #{color.green(map.get(map.get($themes, light), info))}, #{color.blue(map.get(map.get($themes, light), info))};
    --accent-rgb: #{color.red(map.get(map.get($themes, light), accent))}, #{color.green(map.get(map.get($themes, light), accent))}, #{color.blue(map.get(map.get($themes, light), accent))};
    --text-muted-rgb: #{color.red(map.get(map.get($themes, light), text-muted))}, #{color.green(map.get(map.get($themes, light), text-muted))}, #{color.blue(map.get(map.get($themes, light), text-muted))};
    --secondary-rgb: #{color.red(map.get(map.get($themes, light), secondary))}, #{color.green(map.get(map.get($themes, light), secondary))}, #{color.blue(map.get(map.get($themes, light), secondary))};


    --primary-alpha-10: rgba(var(--primary-rgb), 0.1);

    // Add Alpha Badge Backgrounds based on state colors
    --badge-info-bg-alpha: rgba(var(--info-rgb), 0.15);
    --badge-success-bg-alpha: rgba(var(--success-rgb), 0.15);
    --badge-warning-bg-alpha: rgba(var(--warning-rgb), 0.15);
    --badge-error-bg-alpha: rgba(var(--error-rgb), 0.15);

    // Define status/urgency colors (can map to state colors or be unique)
    --status-unassigned-color: var(--warning);
    --status-assigned-color: var(--info);
    --status-progress-color: var(--secondary); // Using secondary color now
    --status-closed-color: var(--text-muted);

    --urgency-low-color: var(--info);
    --urgency-medium-color: var(--success);
    --urgency-high-color: var(--warning);
    --urgency-critical-color: var(--error);

    // Define hover/darker versions if needed by mixins
    --error-dark: #{color.adjust(map.get(map.get($themes, light), error), $blackness: 10%)};
}


// --------------------------------------------------------------------------
// Non-Color Variables (Keep existing definitions)
// --------------------------------------------------------------------------
// Typography
$font-family-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
$font-family-mono: 'Fira Code', 'Source Code Pro', Menlo, Monaco, Consolas, 'Courier New', monospace;
$font-size-xs: 0.75rem;    // 12px
$font-size-sm: 0.875rem;   // 14px
$font-size-base: 1rem;     // 16px
$font-size-lg: 1.125rem;   // 18px
$font-size-xl: 1.25rem;    // 20px
$font-size-2xl: 1.5rem;    // 24px
$font-size-3xl: 1.875rem;  // 30px
$font-size-4xl: 2.25rem;   // 36px
$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-medium: 500;
$font-weight-semibold: 600;
$font-weight-bold: 700;

// Spacing (Based on 0.25rem = 4px scale)
$spacing-0: 0;
$spacing-1: 0.25rem;  // 4px
$spacing-2: 0.5rem;   // 8px
$spacing-3: 0.75rem;  // 12px
$spacing-4: 1rem;     // 16px
$spacing-5: 1.25rem;  // 20px
$spacing-6: 1.5rem;   // 24px
$spacing-8: 2rem;     // 32px
$spacing-10: 2.5rem;  // 40px
$spacing-12: 3rem;    // 48px
$spacing-16: 4rem;    // 64px

// Borders
$border-radius-sm: 0.125rem; // 2px
$border-radius: 0.25rem;    // 4px
$border-radius-md: 0.375rem; // 6px
$border-radius-lg: 0.5rem;    // 8px
$border-radius-xl: 0.75rem;   // 12px
$border-radius-full: 9999px;

// Shadows
$shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
$shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
$shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
$shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

// Layout
$header-height: 4rem;
$sidebar-width: 16rem;
$sidebar-collapsed-width: 4.5rem;
$max-content-width: 1280px;

// Z-index levels
$z-index-dropdown: 1000;
$z-index-sticky: 1020;
$z-index-fixed: 1030;

// Transitions
$transition-fast: 150ms ease;
$transition-medium: 300ms ease;
$transition-slow: 500ms ease;

// Media query breakpoints
$breakpoint-sm: 640px;
$breakpoint-md: 768px;
$breakpoint-lg: 1024px;
$breakpoint-xl: 1280px;
$breakpoint-2xl: 1536px;
