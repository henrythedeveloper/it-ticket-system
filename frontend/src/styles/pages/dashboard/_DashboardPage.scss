// src/styles/pages/dashboard/_DashboardPage.scss

@use '../../variables' as *;

.dashboard-page {
  max-width: 100%;
  margin-bottom: $spacing-8;

  .page-header {
    h1 {
       color: var(--text-primary); // Use CSS variable
    }
    p {
      color: var(--text-muted); // Use CSS variable
      margin-top: $spacing-2;
    }
  }

  .stats-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: $spacing-4;
    margin-bottom: $spacing-8;

    .stats-card {
      background-color: var(--surface-bg); // Use CSS variable
      border: 1px solid var(--border-color); // Use CSS variable
      border-radius: $border-radius-lg;
      box-shadow: $shadow; // Shadow might need adjustment
      display: flex;
      flex-direction: column;
      transition: background-color $transition-medium, border-color $transition-medium;

      .card-content {
        padding: $spacing-4;
        text-align: center;

        h3 {
          font-size: $font-size-lg;
          font-weight: $font-weight-medium;
          color: var(--text-secondary); // Use CSS variable
          margin-bottom: $spacing-2;
          transition: color $transition-medium;
        }

        .count {
          font-size: $font-size-3xl;
          font-weight: $font-weight-bold;
          color: var(--primary-color); // Default color, overridden below
          margin: 0;
          transition: color $transition-medium;
        }
      }

      .card-action {
        padding: $spacing-3;
        text-align: center;
        background-color: var(--surface-alt-bg); // Use CSS variable
        color: var(--primary-color); // Use CSS variable
        border-top: 1px solid var(--border-color); // Use CSS variable
        text-decoration: none;
        font-size: $font-size-sm;
        font-weight: $font-weight-medium;
        border-radius: 0 0 $border-radius-lg $border-radius-lg;
        transition: background-color $transition-fast, color $transition-fast, border-color $transition-medium;

        &:hover {
          background-color: rgba(var(--primary-color), 0.1); // Use CSS variable alpha
        }
      }

      // Specific count colors (using CSS variables)
      &:first-child .card-content .count { color: var(--status-unassigned-color); }
      &:nth-child(2) .card-content .count { color: var(--status-assigned-color); }
      &:nth-child(3) .card-content .count { color: var(--status-progress-color); }
      &:last-child .card-content .count { color: var(--text-primary); } // Total open count
    }
  }

  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
    gap: $spacing-6;

    @media (max-width: $breakpoint-lg) {
      grid-template-columns: 1fr;
    }

    .dashboard-card {
      background-color: var(--surface-bg); // Use CSS variable
      border: 1px solid var(--border-color); // Use CSS variable
      border-radius: $border-radius-lg;
      box-shadow: $shadow; // Shadow might need adjustment
      display: flex;
      flex-direction: column;
      transition: background-color $transition-medium, border-color $transition-medium;

      .card-header {
        padding: $spacing-4;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid var(--border-color); // Use CSS variable
        transition: border-color $transition-medium;

        h2 {
          font-size: $font-size-xl;
          font-weight: $font-weight-semibold;
          color: var(--text-primary); // Use CSS variable
          margin: 0;
        }

        .view-all {
          color: var(--text-link); // Use CSS variable
          text-decoration: none;
          font-size: $font-size-sm;
          font-weight: $font-weight-medium;

          &:hover {
            text-decoration: underline;
            color: var(--text-link-hover); // Use CSS variable
          }
        }
      }

      .card-body {
        padding: $spacing-4;
        flex-grow: 1;

        .no-data {
          color: var(--text-muted); // Use CSS variable
          text-align: center;
          padding: $spacing-6;
          font-style: italic;
        }
      }
    }
  }

  // Table styles (using CSS variables set globally)
  .dashboard-table {
    width: 100%;
    border-collapse: collapse;

    th {
      // Styles inherited from global.scss (uses CSS vars)
      padding: $spacing-2 $spacing-3;
      font-size: $font-size-sm;
      font-weight: $font-weight-semibold;
      white-space: nowrap;
    }

    td {
      // Styles inherited from global.scss (uses CSS vars)
      padding: $spacing-2 $spacing-3;
      font-size: $font-size-sm;

      a {
        color: var(--text-link); // Use CSS variable
        text-decoration: none;

        &:hover {
          text-decoration: underline;
          color: var(--text-link-hover); // Use CSS variable
        }
      }
    }

    tr:hover {
      // Hover handled globally
    }
  }

  // Badge styles (using CSS variables set globally and in TicketCard partial)
  .status-badge, .urgency-badge {
    display: inline-block;
    padding: $spacing-1 $spacing-2;
    border-radius: $border-radius-full;
    font-size: $font-size-xs;
    font-weight: $font-weight-medium;
    text-align: center;
    min-width: 80px;
    // Specific colors applied via classes in _TicketCard.scss using CSS vars
  }

  .task-list {
    list-style: none;
    padding: 0;
    margin: 0;

    .task-item {
      border-bottom: 1px solid var(--border-color); // Use CSS variable
      transition: border-color $transition-medium;

      &:last-child {
        border-bottom: none;
      }

      .task-link {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: $spacing-3;
        text-decoration: none;
        color: var(--text-secondary); // Use CSS variable
        transition: background-color $transition-fast, color $transition-medium;

        &:hover {
          background-color: var(--surface-alt-bg); // Use CSS variable
        }

        .task-title {
          font-weight: $font-weight-medium;
          color: var(--text-primary); // Use CSS variable
          flex-grow: 1;
        }

        .task-due {
          font-size: $font-size-sm;
          color: var(--text-muted); // Use CSS variable
          margin: 0 $spacing-3;
        }

        .task-status {
          padding: $spacing-1 $spacing-2;
          border-radius: $border-radius-full;
          font-size: $font-size-xs;
          font-weight: $font-weight-medium;
          min-width: 80px;
          text-align: center;
          transition: background-color $transition-medium, color $transition-medium;

          // Use CSS variables for status colors
          &.status-open { background-color: rgba(var(--warning-color), 0.15); color: var(--warning-color); }
          &.status-in-progress { background-color: rgba(var(--info-color), 0.15); color: var(--info-color); }
          &.status-completed { background-color: rgba(var(--success-color), 0.15); color: var(--success-color); }
        }
      }
    }
  }

  .quick-actions {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: $spacing-3;

    .action-button {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background-color: var(--surface-alt-bg); // Use CSS variable
      border: 1px solid var(--border-color); // Use CSS variable
      border-radius: $border-radius;
      padding: $spacing-4;
      text-decoration: none;
      color: var(--text-secondary); // Use CSS variable
      transition: all $transition-fast;
      text-align: center;

      .icon {
        font-size: $font-size-2xl;
        margin-bottom: $spacing-2;
        color: var(--text-primary); // Use CSS variable
      }

      span {
        font-size: $font-size-sm;
        font-weight: $font-weight-medium;
      }

      &:hover {
        background-color: var(--surface-bg); // Use CSS variable
        border-color: var(--border-color-strong); // Use CSS variable
        color: var(--text-primary); // Use CSS variable
        transform: translateY(-2px);
      }
    }
  }
}

// Responsive adjustments
@media (max-width: $breakpoint-md) {
  .dashboard-page {
    .dashboard-table {
      th:nth-child(4),
      th:nth-child(5),
      td:nth-child(4),
      td:nth-child(5) {
        display: none;
      }
    }

    .task-list {
      .task-item {
        .task-link {
          flex-wrap: wrap;

          .task-title {
            width: 100%;
            margin-bottom: $spacing-1;
          }

          .task-due, .task-status {
            margin-top: $spacing-1;
          }
        }
      }
    }
  }
}
