// src/styles/pages/dashboard/_TaskDetailPage.scss

@use '../../variables' as *;

.task-detail-page {
  width: 100%;
  margin-bottom: $spacing-8;

  .page-header {
    .header-left {
      display: flex;
      flex-direction: column;
      align-items: flex-start;

      .back-button {
        background: none;
        border: none;
        color: var(--text-link); // Use CSS variable
        font-weight: $font-weight-medium;
        cursor: pointer;
        padding: 0;
        margin-bottom: $spacing-2;
        font-size: $font-size-sm;
        display: inline-flex;
        align-items: center;
        transition: color $transition-fast;

        &:hover {
          color: var(--text-link-hover); // Use CSS variable
          text-decoration: underline;
        }
      }

      h1 {
         margin-bottom: 0;
         color: var(--text-primary); // Use CSS variable
         transition: color $transition-medium;
      }
    }
  }

  .task-container {
    background-color: var(--surface-bg); // Use CSS variable
    border: 1px solid var(--border-color); // Use CSS variable
    border-radius: $border-radius-lg;
    box-shadow: $shadow; // Shadow might need adjustment
    padding: $spacing-6;
    margin-bottom: $spacing-6;
    transition: background-color $transition-medium, border-color $transition-medium;

    .task-form-container {
      max-width: 800px;
      margin: 0 auto;

      .task-form {
        display: flex;
        flex-direction: column;
        gap: $spacing-4;
      }
    }

    .task-details {
      .status-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: $spacing-4;
        padding-bottom: $spacing-4;
        border-bottom: 1px solid var(--border-color); // Use CSS variable
        transition: border-color $transition-medium;

        .status-badge {
          display: inline-block;
          padding: $spacing-2 $spacing-3;
          border-radius: $border-radius-full;
          font-size: $font-size-sm;
          font-weight: $font-weight-medium;
          transition: background-color $transition-medium, color $transition-medium;

          // Use CSS variables for status colors
          &.status-open { background-color: rgba(var(--warning-color), 0.15); color: var(--warning-color); }
          &.status-in-progress { background-color: rgba(var(--info-color), 0.15); color: var(--info-color); }
          &.status-completed { background-color: rgba(var(--success-color), 0.15); color: var(--success-color); }
        }

        .status-actions {
          display: flex;
          gap: $spacing-3;

          .start-btn, .complete-btn {
            padding: $spacing-2 $spacing-4;
            border-radius: $border-radius;
            font-size: $font-size-sm;
            font-weight: $font-weight-medium;
            cursor: pointer;
            transition: all $transition-fast;
            border: none;
          }

          .start-btn {
            background-color: var(--info-color); // Use CSS variable
            color: var(--text-inverted); // Use CSS variable

            &:hover {
              background-color: var(--primary-dark); // Adjust hover if needed
            }
          }

          .complete-btn {
            background-color: var(--success-color); // Use CSS variable
            color: var(--text-inverted); // Use CSS variable

            &:hover {
              background-color: var(--secondary-dark); // Adjust hover if needed
            }
          }
        }
      }

      .detail-section {
        margin-bottom: $spacing-6;

        h3 {
          font-size: $font-size-xl;
          color: var(--text-primary); // Use CSS variable
          margin-bottom: $spacing-3;
          transition: color $transition-medium;
        }

        .description {
          color: var(--text-secondary); // Use CSS variable
          line-height: 1.6;
          white-space: pre-line;
          transition: color $transition-medium;

          .no-description {
            color: var(--text-muted); // Use CSS variable
            font-style: italic;
          }
        }
      }

      .meta-section {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: $spacing-4;

        .meta-item {
          .meta-label {
            display: block;
            font-size: $font-size-sm;
            color: var(--text-muted); // Use CSS variable
            margin-bottom: $spacing-1;
            transition: color $transition-medium;
          }

          .meta-value {
            font-weight: $font-weight-medium;
            color: var(--text-secondary); // Use CSS variable
            transition: color $transition-medium;

            &.overdue {
              color: var(--error-color); // Use CSS variable
            }
          }
        }
      }
    }

    .task-actions {
      display: flex;
      gap: $spacing-3;
      margin-top: $spacing-6;
      padding-top: $spacing-6;
      border-top: 1px solid var(--border-color); // Use CSS variable
      transition: border-color $transition-medium;

      button {
        padding: $spacing-2 $spacing-4;
        border-radius: $border-radius;
        font-weight: $font-weight-medium;
        cursor: pointer;
        transition: all $transition-fast;
        border: none;
      }

      .assign-to-me-btn {
        background-color: var(--primary-color);
         &:hover {
           background-color: var(--primary-dark);
         }
      }
    }
  } // End of .task-container

  // --- Task Updates/Comments Section ---
  .task-updates {
    background-color: var(--surface-bg); // Use CSS variable
    border: 1px solid var(--border-color); // Use CSS variable
    border-radius: $border-radius-lg;
    box-shadow: $shadow; // Shadow might need adjustment
    padding: $spacing-6;
    margin-top: $spacing-6;
    max-height: 40vh;
    overflow-y: auto;
    transition: background-color $transition-medium, border-color $transition-medium;

    .updates-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: $spacing-4;
      padding-bottom: $spacing-3;
      border-bottom: 1px solid var(--border-color); // Use CSS variable
      transition: border-color $transition-medium;

      h3 {
        font-size: $font-size-lg;
        color: var(--text-primary); // Use CSS variable
        margin: 0;
        transition: color $transition-medium;
      }

      .add-comment-btn {
         padding: $spacing-2 $spacing-3; // Adjust padding if needed
         font-size: $font-size-sm;
      }
    }

    .comment-form-container {
      background-color: var(--surface-alt-bg); // Use CSS variable
      border-radius: $border-radius;
      padding: $spacing-4;
      margin-bottom: $spacing-4;
      border: 1px solid var(--border-color-strong); // Use CSS variable
      transition: background-color $transition-medium, border-color $transition-medium;

      h4 {
        font-size: $font-size-base;
        color: var(--text-primary); // Use CSS variable
        margin-bottom: $spacing-3;
        font-weight: $font-weight-semibold;
        transition: color $transition-medium;
      }

      .comment-form {
        // Inherits form-group styles from _forms.scss which now use CSS vars
        .form-group {
           margin-bottom: $spacing-3;
           textarea { // Specific textarea styles if needed
             min-height: 100px;
           }
        }

        .form-actions {
          display: flex;
          justify-content: flex-end;
          gap: $spacing-3;
          margin-top: $spacing-3;

          .cancel-btn {
             background-color: var(--surface-bg); // Use CSS variable
             color: var(--text-secondary); // Use CSS variable
             border: 1px solid var(--border-color); // Use CSS variable

             &:hover {
               background-color: var(--surface-alt-bg); // Use CSS variable
             }
          }
        }
      }
    }

    .updates-timeline {
      .update-item {
        padding: $spacing-4 0 $spacing-4 $spacing-5;
        border-left: 3px solid var(--border-color); // Use CSS variable
        margin-left: $spacing-2;
        margin-bottom: $spacing-4;
        position: relative;
        transition: border-color $transition-medium;

        &:last-child {
            margin-bottom: 0;
            border-left-color: transparent;
        }

        &:before {
          content: '';
          position: absolute;
          width: 12px;
          height: 12px;
          background-color: var(--border-color-strong); // Use CSS variable
          border-radius: 50%;
          left: -7.5px;
          top: $spacing-4;
          border: 2px solid var(--surface-bg); // Use CSS variable
          transition: background-color $transition-medium, border-color $transition-medium;
        }

        &.system-update {
          background-color: rgba(var(--text-muted), 0.03); // Use CSS variable alpha
          border-left-color: var(--border-color-strong); // Use CSS variable

          &:before {
            background-color: var(--text-muted); // Use CSS variable
          }
           .update-author span {
             font-style: italic;
           }
        }

        &.internal-note { // If internal notes are implemented
           border-left-color: var(--accent-color); // Use CSS variable
           background-color: rgba(var(--accent-color), 0.05); // Use CSS variable alpha
            &:before {
                background-color: var(--accent-color); // Use CSS variable
            }
        }

        .update-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: $spacing-2;

          .update-author {
            font-weight: $font-weight-semibold;
            color: var(--text-primary); // Use CSS variable
            display: flex;
            align-items: center;
            transition: color $transition-medium;

            .internal-badge { // If internal notes are implemented
              background-color: var(--accent-light); // Use CSS variable
              color: var(--text-inverted); // Use CSS variable
              font-size: $font-size-xs;
              padding: 2px $spacing-1;
              border-radius: $border-radius-sm;
              margin-left: $spacing-2;
              text-transform: uppercase;
              font-weight: $font-weight-bold;
            }
          }

          .update-time {
            font-size: $font-size-sm;
            color: var(--text-muted); // Use CSS variable
            transition: color $transition-medium;
          }
        }

        .update-content {
          color: var(--text-secondary); // Use CSS variable
          line-height: 1.5;
          white-space: pre-line;
          padding-top: $spacing-1;
          transition: color $transition-medium;
        }
      }

      .no-updates {
        color: var(--text-muted); // Use CSS variable
        text-align: center;
        padding: $spacing-6;
        font-style: italic;
      }
    }
  }


  // Shared Form Actions (adjust if needed or remove if specific styles above are sufficient)
  .form-actions {
    display: flex;
    justify-content: flex-end;
    gap: $spacing-3;
    margin-top: $spacing-6;
    
    .cancel-btn, .submit-btn {
      padding: $spacing-2 $spacing-6;
      border-radius: $border-radius;
      font-weight: $font-weight-medium;
      cursor: pointer;
      transition: all $transition-fast;
    }
    
    .cancel-btn {
      background-color: $white;
      color: $gray-700;
      border: 1px solid $gray-300;
      
      &:hover {
        background-color: $gray-100;
      }
    }
    
    .submit-btn {
      background-color: $primary-color;
      color: $white;
      border: none;
      
      &:hover {
        background-color: $primary-dark;
      }
      
      &:disabled {
        background-color: $gray-400;
        cursor: not-allowed;
      }
    }
  }
}

/// Responsive adjustments
@media (max-width: $breakpoint-md) {
  .task-detail-page {
    .task-container {
      padding: $spacing-4;

      .task-details {
        .status-bar {
          flex-direction: column;
          align-items: flex-start;
          gap: $spacing-3;
        }

        .meta-section {
          grid-template-columns: 1fr;
        }
      }

      .task-actions {
        flex-direction: column;

        button {
          width: 100%;
        }
      }
    }

    .form-actions {
      flex-direction: column;

      button {
        width: 100%;
      }
    }

     // Responsive styles for comments section
    .task-updates {
        padding: $spacing-4;

        .updates-timeline {
            .update-item {
                padding: $spacing-3 0 $spacing-3 $spacing-4;
                margin-left: $spacing-1;

                 &:before {
                    left: -6.5px; // Adjust dot position
                    top: $spacing-3;
                 }

                .update-header {
                    flex-direction: column;
                    align-items: flex-start;
                    gap: $spacing-1;

                    .update-time {
                        margin-top: 0; // Reset margin
                    }
                }
            }
        }

         .comment-form-container {
             padding: $spacing-3;
         }
    }
  }
}
