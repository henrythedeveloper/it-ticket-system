    server {
        listen 80; # Render maps external port 443 (HTTPS) to this internal port 80
        server_name _; # Listen on any hostname internally

        # --- Add Render's internal DNS resolver ---
        # Use the recommended IPv6 address for Render's internal DNS
        resolver [fdaa::3] valid=10s; # Resolve using Render's DNS, cache for 10s

        # Proxy API requests to the backend service
        location /api {
            # --- Use a variable for the upstream ---
            # Replace 'it-helpdesk-backend' with your actual Render backend service name
            set $backend_service http://it-helpdesk-backend:8080;
            proxy_pass $backend_service; # Pass to the variable
            # --- End variable usage ---

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; # Important for backend to know request used HTTPS
        }

        # --- ADD THIS BLOCK BACK ---
        # Proxy requests for the frontend to the frontend web service
        location / {
            # --- Use a variable for the upstream ---
            # Replace 'it-helpdesk-frontend' with your actual Render frontend service name
            # Port 80 is where Nginx runs inside the frontend container
            set $frontend_service http://it-helpdesk-frontend:80;
            proxy_pass $frontend_service; # Pass to the variable
            # --- End variable usage ---

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # --- END ADDED BLOCK ---
    }

    # HTTPS handled by Render
    