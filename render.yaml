# render.yaml
# ==================================================
# Infrastructure definition for the IT Helpdesk System on Render.
# Place this file in the root of your repository.
# ==================================================

# Define the services (containers) for your application
services:
  # Nginx Reverse Proxy (Public Web Service)
  - name: nginx # Service name (can be anything descriptive)
    type: web # Exposed to the internet
    env: docker # Specify Docker environment
    dockerfilePath: ./nginx/Dockerfile # Path to Dockerfile relative to repo root
    # Define how requests are routed (assuming Nginx listens on 80)
    # Render automatically assigns a domain and handles HTTPS
    # You might need rewrite rules depending on your nginx.conf
    # healthCheckPath: / # Optional: path for health checks
    envVars:
      - key: NGINX_PORT # Nginx usually listens on 80 by default inside container
        value: 80
      # Add any other env vars needed by nginx container specifically

  # Frontend Service (Private Service - served via Nginx)
  - name: frontend
    type: pserv # Private service, not directly exposed
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    # Define build arguments if needed (like PUBLIC_API_URL, though Nginx handles this)
    # dockerBuildArgs:
    #   PUBLIC_API_URL: /api # Or your actual API path if different
    # No start command needed if defined in Dockerfile CMD
    # No ports needed as it's accessed internally by Nginx

   # Backend Service (Private Service - accessed via Nginx proxy)
  - name: backend
    type: pserv # Private service
    env: docker
    dockerfilePath: ./backend/Dockerfile
    envVars:
      # --- Secrets (Set these in Render Dashboard Environment) ---
      - key: DATABASE_URL
        fromDatabase:
          name: it-helpdesk-db # Must match the database name defined below
          property: connectionString
      - key: JWT_SECRET
        fromSecret: JWT_SECRET # Name of the secret key in Render
      - key: S3_ACCESS_KEY # Your Backblaze B2 Key ID
        fromSecret: S3_ACCESS_KEY
      - key: S3_SECRET_KEY # Your Backblaze B2 Application Key
        fromSecret: S3_SECRET_KEY
      - key: RESEND_API_KEY # Your Resend API Key
        fromSecret: RESEND_API_KEY
      # --- Non-Secrets ---
      - key: PORT # Internal port the Go app listens on
        value: 8080
      - key: PORTAL_BASE_URL # IMPORTANT: Use your Render app's public URL
        value: https://your-app-name.onrender.com # Replace with your actual Render URL
      - key: EMAIL_FROM # Your verified sender email
        value: your-verified-email@example.com # Replace with your Resend verified sender
      # --- Backblaze B2 Configuration ---
      - key: S3_ENDPOINT
        value: s3.us-west-004.backblazeb2.com # Replace with YOUR B2 bucket's endpoint URL
      - key: S3_REGION
        value: us-west-004 # Replace with YOUR B2 bucket's region
      - key: S3_BUCKET
        value: your-unique-b2-bucket-name # Replace with YOUR B2 bucket name
      - key: S3_DISABLE_SSL
        value: false # Backblaze B2 uses HTTPS
      # Add other backend env vars as needed (CACHE_*, etc.)



# Define the managed PostgreSQL database
databases:
  - name: it-helpdesk-db # Name for your database service on Render
    plan: free # Use the free tier (check Render pricing for limitations)
    postgresMajorVersion: 16 # Specify desired Postgres version (check Render supported versions)

